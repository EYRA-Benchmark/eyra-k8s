# Default values for eyra-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ''
fullnameOverride: ''

domain: eyrabenchmark.net

web:
  debug: 'False'
  imageName: 'eyra/comic:99'
  emailAddres: 'eyra.benchmark@gmail.com'
  emailHost: 'smtp.gmail.com'
  emailPort: '587'
  emailUseTLS: 'True'
  environment: 'production'
  replicas: 2

eyra-frontend:
  image:
    repository: eyra/frontend
    tag: 882
    pullPolicy: IfNotPresent

  replicaCount: 2

  nameOverride: ''
  fullnameOverride: ''

  EYRA_BACKEND_URL: 'https://api.eyrabenchmark.net/api/v1/'

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations:
      ingress.kubernetes.io/ssl-redirect: 'true'
      kubernetes.io/tls-acme: 'true'
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/ingress.class: 'nginx'
      nginx.ingress.kubernetes.io/from-to-www-redirect: 'true'
      nginx.ingress.kubernetes.io/configuration-snippet: |
        if ($host = 'eyrabenchmark.net' ) {
          rewrite ^ https://www.eyrabenchmark.net$request_uri permanent;
        }
    #      kubernetes.io/ingress.class: alb
    #      alb.ingress.kubernetes.io/scheme: internet-facing
    paths:
      - /
    hosts:
      - eyrabenchmark.net
      - www.eyrabenchmark.net
    tls:
      - secretName: eyrabenchmark.net-tls
        hosts:
          - eyrabenchmark.net
      - secretName: www.eyrabenchmark.net-tls
        hosts:
          - www.eyrabenchmark.net

  nodeSelector: {}

  tolerations: []

  affinity: {}

backup: 'true'

postgresql:
  existingSecret: eyra-postgresql
  postgresqlUsername: comic
  postgresqlDatabase: comic
  initdbScripts:
    setup.sql: |
      ALTER USER comic WITH SUPERUSER;

redis:
  usePassword: false
  cluster:
    enabled: false

s3:
  region: eu-central-1
  bucket: eyra-data01
  host: s3.eu-central-1.amazonaws.com

docker-registry:
  storage: s3
  s3:
    region: eu-central-1
    regionEndpoint: s3.eu-central-1.amazonaws.com
    bucket: eyra-data01
    encrypt: false
    secure: true

  secrets:
    s3:
      accessKey:
      secretKey:

tags:
  memcached: true
